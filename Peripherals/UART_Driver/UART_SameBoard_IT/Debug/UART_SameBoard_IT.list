
UART_SameBoard_IT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000009d4  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b80  08000b88  00010b88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b80  08000b80  00010b88  2**0
                  CONTENTS
  4 .ARM          00000000  08000b80  08000b80  00010b88  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b80  08000b88  00010b88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b80  08000b80  00010b80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b84  08000b84  00010b84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010b88  2**0
                  CONTENTS
 10 .bss          000000b4  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200000b4  200000b4  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010b88  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010bb8  2**0
                  CONTENTS, READONLY
 14 .debug_info   00001249  00000000  00000000  00010bfb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000003b3  00000000  00000000  00011e44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000b0  00000000  00000000  000121f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000007c  00000000  00000000  000122a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0001a2ec  00000000  00000000  00012324  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001102  00000000  00000000  0002c610  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00093136  00000000  00000000  0002d712  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000001dc  00000000  00000000  000c0848  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007f  00000000  00000000  000c0a24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08000b68 	.word	0x08000b68

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	08000b68 	.word	0x08000b68

080001ec <main>:
uint8_t pTxBuffer2[10];
uint8_t pRxBuffer2[10];


int main(void)
{
 80001ec:	b580      	push	{r7, lr}
 80001ee:	af00      	add	r7, sp, #0
    /** Define handle for UART1 */
	hUART1.pRCC = RCC;
 80001f0:	4b5d      	ldr	r3, [pc, #372]	; (8000368 <main+0x17c>)
 80001f2:	4a5e      	ldr	r2, [pc, #376]	; (800036c <main+0x180>)
 80001f4:	629a      	str	r2, [r3, #40]	; 0x28
	hUART1.pGPIO = GPIOA;
 80001f6:	4b5c      	ldr	r3, [pc, #368]	; (8000368 <main+0x17c>)
 80001f8:	4a5d      	ldr	r2, [pc, #372]	; (8000370 <main+0x184>)
 80001fa:	625a      	str	r2, [r3, #36]	; 0x24
	hUART1.pUART = USART1;
 80001fc:	4b5a      	ldr	r3, [pc, #360]	; (8000368 <main+0x17c>)
 80001fe:	4a5d      	ldr	r2, [pc, #372]	; (8000374 <main+0x188>)
 8000200:	621a      	str	r2, [r3, #32]
	hUART1.GPIO_bus = AHB1;
 8000202:	4b59      	ldr	r3, [pc, #356]	; (8000368 <main+0x17c>)
 8000204:	2200      	movs	r2, #0
 8000206:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
	hUART1.UART_bus = APB2;
 800020a:	4b57      	ldr	r3, [pc, #348]	; (8000368 <main+0x17c>)
 800020c:	2204      	movs	r2, #4
 800020e:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
	hUART1.Clk_pin = 4;
 8000212:	4b55      	ldr	r3, [pc, #340]	; (8000368 <main+0x17c>)
 8000214:	2204      	movs	r2, #4
 8000216:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
	hUART1.TX_pin = 9;
 800021a:	4b53      	ldr	r3, [pc, #332]	; (8000368 <main+0x17c>)
 800021c:	2209      	movs	r2, #9
 800021e:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
	hUART1.RX_pin = 10;
 8000222:	4b51      	ldr	r3, [pc, #324]	; (8000368 <main+0x17c>)
 8000224:	220a      	movs	r2, #10
 8000226:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	hUART1.oversampling = OVR16;
 800022a:	4a4f      	ldr	r2, [pc, #316]	; (8000368 <main+0x17c>)
 800022c:	7813      	ldrb	r3, [r2, #0]
 800022e:	f36f 0300 	bfc	r3, #0, #1
 8000232:	7013      	strb	r3, [r2, #0]
	hUART1.word_length = EIGHT_BIT;
 8000234:	4a4c      	ldr	r2, [pc, #304]	; (8000368 <main+0x17c>)
 8000236:	7813      	ldrb	r3, [r2, #0]
 8000238:	f36f 0382 	bfc	r3, #2, #1
 800023c:	7013      	strb	r3, [r2, #0]
	hUART1.parity_enable = FALSE;
 800023e:	4a4a      	ldr	r2, [pc, #296]	; (8000368 <main+0x17c>)
 8000240:	7813      	ldrb	r3, [r2, #0]
 8000242:	f36f 03c3 	bfc	r3, #3, #1
 8000246:	7013      	strb	r3, [r2, #0]
	hUART1.transmit_interrupt = FALSE;
 8000248:	4a47      	ldr	r2, [pc, #284]	; (8000368 <main+0x17c>)
 800024a:	7893      	ldrb	r3, [r2, #2]
 800024c:	f36f 0341 	bfc	r3, #1, #1
 8000250:	7093      	strb	r3, [r2, #2]
	hUART1.receiver_interrupt = TRUE;
 8000252:	4a45      	ldr	r2, [pc, #276]	; (8000368 <main+0x17c>)
 8000254:	7893      	ldrb	r3, [r2, #2]
 8000256:	f043 0301 	orr.w	r3, r3, #1
 800025a:	7093      	strb	r3, [r2, #2]
	hUART1.interrupt_enable = TRUE;
 800025c:	4a42      	ldr	r2, [pc, #264]	; (8000368 <main+0x17c>)
 800025e:	7813      	ldrb	r3, [r2, #0]
 8000260:	f043 0320 	orr.w	r3, r3, #32
 8000264:	7013      	strb	r3, [r2, #0]
	hUART1.interrupt_number = 37;
 8000266:	4b40      	ldr	r3, [pc, #256]	; (8000368 <main+0x17c>)
 8000268:	2225      	movs	r2, #37	; 0x25
 800026a:	705a      	strb	r2, [r3, #1]
	hUART1.pTxBuffer = pTxBuffer1;
 800026c:	4b3e      	ldr	r3, [pc, #248]	; (8000368 <main+0x17c>)
 800026e:	4a42      	ldr	r2, [pc, #264]	; (8000378 <main+0x18c>)
 8000270:	609a      	str	r2, [r3, #8]
	hUART1.pRxBuffer = pRxBuffer1;
 8000272:	4b3d      	ldr	r3, [pc, #244]	; (8000368 <main+0x17c>)
 8000274:	4a41      	ldr	r2, [pc, #260]	; (800037c <main+0x190>)
 8000276:	60da      	str	r2, [r3, #12]
	hUART1.RxIndex = 0;
 8000278:	4b3b      	ldr	r3, [pc, #236]	; (8000368 <main+0x17c>)
 800027a:	2200      	movs	r2, #0
 800027c:	61da      	str	r2, [r3, #28]
	hUART1.baud_rate = BAUD_9600;
 800027e:	4b3a      	ldr	r3, [pc, #232]	; (8000368 <main+0x17c>)
 8000280:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000284:	605a      	str	r2, [r3, #4]
	hUART1.to_transmit = TRUE;
 8000286:	4a38      	ldr	r2, [pc, #224]	; (8000368 <main+0x17c>)
 8000288:	7893      	ldrb	r3, [r2, #2]
 800028a:	f043 0304 	orr.w	r3, r3, #4
 800028e:	7093      	strb	r3, [r2, #2]
	hUART1.to_receive = TRUE;
 8000290:	4a35      	ldr	r2, [pc, #212]	; (8000368 <main+0x17c>)
 8000292:	7893      	ldrb	r3, [r2, #2]
 8000294:	f043 0308 	orr.w	r3, r3, #8
 8000298:	7093      	strb	r3, [r2, #2]
	hUART1.enable = TRUE;
 800029a:	4a33      	ldr	r2, [pc, #204]	; (8000368 <main+0x17c>)
 800029c:	7813      	ldrb	r3, [r2, #0]
 800029e:	f043 0302 	orr.w	r3, r3, #2
 80002a2:	7013      	strb	r3, [r2, #0]

    /** Define handle for UART2 */
	hUART2.pRCC = RCC;
 80002a4:	4b36      	ldr	r3, [pc, #216]	; (8000380 <main+0x194>)
 80002a6:	4a31      	ldr	r2, [pc, #196]	; (800036c <main+0x180>)
 80002a8:	629a      	str	r2, [r3, #40]	; 0x28
	hUART2.pGPIO = GPIOA;
 80002aa:	4b35      	ldr	r3, [pc, #212]	; (8000380 <main+0x194>)
 80002ac:	4a30      	ldr	r2, [pc, #192]	; (8000370 <main+0x184>)
 80002ae:	625a      	str	r2, [r3, #36]	; 0x24
	hUART2.pUART = USART2;
 80002b0:	4b33      	ldr	r3, [pc, #204]	; (8000380 <main+0x194>)
 80002b2:	4a34      	ldr	r2, [pc, #208]	; (8000384 <main+0x198>)
 80002b4:	621a      	str	r2, [r3, #32]
	hUART2.GPIO_bus = AHB1;
 80002b6:	4b32      	ldr	r3, [pc, #200]	; (8000380 <main+0x194>)
 80002b8:	2200      	movs	r2, #0
 80002ba:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
	hUART2.UART_bus = APB1;
 80002be:	4b30      	ldr	r3, [pc, #192]	; (8000380 <main+0x194>)
 80002c0:	2203      	movs	r2, #3
 80002c2:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
	hUART2.Clk_pin = 17;
 80002c6:	4b2e      	ldr	r3, [pc, #184]	; (8000380 <main+0x194>)
 80002c8:	2211      	movs	r2, #17
 80002ca:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
	hUART2.TX_pin = 2;
 80002ce:	4b2c      	ldr	r3, [pc, #176]	; (8000380 <main+0x194>)
 80002d0:	2202      	movs	r2, #2
 80002d2:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
	hUART2.RX_pin = 3;
 80002d6:	4b2a      	ldr	r3, [pc, #168]	; (8000380 <main+0x194>)
 80002d8:	2203      	movs	r2, #3
 80002da:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	hUART2.oversampling = OVR16;
 80002de:	4a28      	ldr	r2, [pc, #160]	; (8000380 <main+0x194>)
 80002e0:	7813      	ldrb	r3, [r2, #0]
 80002e2:	f36f 0300 	bfc	r3, #0, #1
 80002e6:	7013      	strb	r3, [r2, #0]
	hUART2.word_length = EIGHT_BIT;
 80002e8:	4a25      	ldr	r2, [pc, #148]	; (8000380 <main+0x194>)
 80002ea:	7813      	ldrb	r3, [r2, #0]
 80002ec:	f36f 0382 	bfc	r3, #2, #1
 80002f0:	7013      	strb	r3, [r2, #0]
	hUART2.parity_enable = FALSE;
 80002f2:	4a23      	ldr	r2, [pc, #140]	; (8000380 <main+0x194>)
 80002f4:	7813      	ldrb	r3, [r2, #0]
 80002f6:	f36f 03c3 	bfc	r3, #3, #1
 80002fa:	7013      	strb	r3, [r2, #0]
	hUART2.transmit_interrupt = FALSE;
 80002fc:	4a20      	ldr	r2, [pc, #128]	; (8000380 <main+0x194>)
 80002fe:	7893      	ldrb	r3, [r2, #2]
 8000300:	f36f 0341 	bfc	r3, #1, #1
 8000304:	7093      	strb	r3, [r2, #2]
	hUART2.receiver_interrupt = TRUE;
 8000306:	4a1e      	ldr	r2, [pc, #120]	; (8000380 <main+0x194>)
 8000308:	7893      	ldrb	r3, [r2, #2]
 800030a:	f043 0301 	orr.w	r3, r3, #1
 800030e:	7093      	strb	r3, [r2, #2]
	hUART2.interrupt_enable = TRUE;
 8000310:	4a1b      	ldr	r2, [pc, #108]	; (8000380 <main+0x194>)
 8000312:	7813      	ldrb	r3, [r2, #0]
 8000314:	f043 0320 	orr.w	r3, r3, #32
 8000318:	7013      	strb	r3, [r2, #0]
	hUART2.interrupt_number = 38;
 800031a:	4b19      	ldr	r3, [pc, #100]	; (8000380 <main+0x194>)
 800031c:	2226      	movs	r2, #38	; 0x26
 800031e:	705a      	strb	r2, [r3, #1]
	hUART2.pTxBuffer = pTxBuffer2;
 8000320:	4b17      	ldr	r3, [pc, #92]	; (8000380 <main+0x194>)
 8000322:	4a19      	ldr	r2, [pc, #100]	; (8000388 <main+0x19c>)
 8000324:	609a      	str	r2, [r3, #8]
	hUART2.pRxBuffer = pRxBuffer2;
 8000326:	4b16      	ldr	r3, [pc, #88]	; (8000380 <main+0x194>)
 8000328:	4a18      	ldr	r2, [pc, #96]	; (800038c <main+0x1a0>)
 800032a:	60da      	str	r2, [r3, #12]
	hUART2.RxIndex = 0;
 800032c:	4b14      	ldr	r3, [pc, #80]	; (8000380 <main+0x194>)
 800032e:	2200      	movs	r2, #0
 8000330:	61da      	str	r2, [r3, #28]
	hUART2.baud_rate = BAUD_9600;
 8000332:	4b13      	ldr	r3, [pc, #76]	; (8000380 <main+0x194>)
 8000334:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000338:	605a      	str	r2, [r3, #4]
	hUART2.to_transmit = TRUE;
 800033a:	4a11      	ldr	r2, [pc, #68]	; (8000380 <main+0x194>)
 800033c:	7893      	ldrb	r3, [r2, #2]
 800033e:	f043 0304 	orr.w	r3, r3, #4
 8000342:	7093      	strb	r3, [r2, #2]
	hUART2.to_receive = TRUE;
 8000344:	4a0e      	ldr	r2, [pc, #56]	; (8000380 <main+0x194>)
 8000346:	7893      	ldrb	r3, [r2, #2]
 8000348:	f043 0308 	orr.w	r3, r3, #8
 800034c:	7093      	strb	r3, [r2, #2]
	hUART2.enable = TRUE;
 800034e:	4a0c      	ldr	r2, [pc, #48]	; (8000380 <main+0x194>)
 8000350:	7813      	ldrb	r3, [r2, #0]
 8000352:	f043 0302 	orr.w	r3, r3, #2
 8000356:	7013      	strb	r3, [r2, #0]
	/** Initial configuration of UART1 */
	UART_Init(&hUART1);
 8000358:	4803      	ldr	r0, [pc, #12]	; (8000368 <main+0x17c>)
 800035a:	f000 fa2d 	bl	80007b8 <UART_Init>
	/** Initial configuration of UART2 */
	UART_Init(&hUART2);
 800035e:	4808      	ldr	r0, [pc, #32]	; (8000380 <main+0x194>)
 8000360:	f000 fa2a 	bl	80007b8 <UART_Init>

	/** Loop forever */
	for(;;){
 8000364:	e7fe      	b.n	8000364 <main+0x178>
 8000366:	bf00      	nop
 8000368:	2000001c 	.word	0x2000001c
 800036c:	40023800 	.word	0x40023800
 8000370:	40020000 	.word	0x40020000
 8000374:	40011000 	.word	0x40011000
 8000378:	20000084 	.word	0x20000084
 800037c:	20000090 	.word	0x20000090
 8000380:	20000050 	.word	0x20000050
 8000384:	40004400 	.word	0x40004400
 8000388:	2000009c 	.word	0x2000009c
 800038c:	200000a8 	.word	0x200000a8

08000390 <UART_GPIO_ClockEnable>:
#include "uart_sameboard.h"

extern UARTHandle_t hUART1;
extern UARTHandle_t hUART2;

void UART_GPIO_ClockEnable(UARTHandle_t * hUART){
 8000390:	b480      	push	{r7}
 8000392:	b083      	sub	sp, #12
 8000394:	af00      	add	r7, sp, #0
 8000396:	6078      	str	r0, [r7, #4]
	switch(hUART->GPIO_bus){
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800039e:	2b04      	cmp	r3, #4
 80003a0:	d857      	bhi.n	8000452 <UART_GPIO_ClockEnable+0xc2>
 80003a2:	a201      	add	r2, pc, #4	; (adr r2, 80003a8 <UART_GPIO_ClockEnable+0x18>)
 80003a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003a8:	080003bd 	.word	0x080003bd
 80003ac:	080003db 	.word	0x080003db
 80003b0:	080003f9 	.word	0x080003f9
 80003b4:	08000417 	.word	0x08000417
 80003b8:	08000435 	.word	0x08000435
	case AHB1:
		hUART->pRCC->AHB1ENR |= (0x1 << hUART->GPIO_port);
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80003c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 80003c8:	4619      	mov	r1, r3
 80003ca:	2301      	movs	r3, #1
 80003cc:	408b      	lsls	r3, r1
 80003ce:	4619      	mov	r1, r3
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80003d4:	430a      	orrs	r2, r1
 80003d6:	631a      	str	r2, [r3, #48]	; 0x30
		break;
 80003d8:	e03b      	b.n	8000452 <UART_GPIO_ClockEnable+0xc2>
	case AHB2:
		hUART->pRCC->AHB2ENR |= (0x1 << hUART->GPIO_port);
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80003de:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 80003e6:	4619      	mov	r1, r3
 80003e8:	2301      	movs	r3, #1
 80003ea:	408b      	lsls	r3, r1
 80003ec:	4619      	mov	r1, r3
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80003f2:	430a      	orrs	r2, r1
 80003f4:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 80003f6:	e02c      	b.n	8000452 <UART_GPIO_ClockEnable+0xc2>
	case AHB3:
		hUART->pRCC->AHB3ENR |= (0x1 << hUART->GPIO_port);
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80003fc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8000404:	4619      	mov	r1, r3
 8000406:	2301      	movs	r3, #1
 8000408:	408b      	lsls	r3, r1
 800040a:	4619      	mov	r1, r3
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000410:	430a      	orrs	r2, r1
 8000412:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 8000414:	e01d      	b.n	8000452 <UART_GPIO_ClockEnable+0xc2>
	case APB1:
		hUART->pRCC->APB1ENR |= (0x1 << hUART->GPIO_port);
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800041a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8000422:	4619      	mov	r1, r3
 8000424:	2301      	movs	r3, #1
 8000426:	408b      	lsls	r3, r1
 8000428:	4619      	mov	r1, r3
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800042e:	430a      	orrs	r2, r1
 8000430:	641a      	str	r2, [r3, #64]	; 0x40
		break;
 8000432:	e00e      	b.n	8000452 <UART_GPIO_ClockEnable+0xc2>
	case APB2:
		hUART->pRCC->APB2ENR |= (0x1 << hUART->GPIO_port);
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000438:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8000440:	4619      	mov	r1, r3
 8000442:	2301      	movs	r3, #1
 8000444:	408b      	lsls	r3, r1
 8000446:	4619      	mov	r1, r3
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800044c:	430a      	orrs	r2, r1
 800044e:	645a      	str	r2, [r3, #68]	; 0x44
		break;
 8000450:	bf00      	nop
	}
}
 8000452:	bf00      	nop
 8000454:	370c      	adds	r7, #12
 8000456:	46bd      	mov	sp, r7
 8000458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045c:	4770      	bx	lr
 800045e:	bf00      	nop

08000460 <UART_GPIOConfig>:

void UART_GPIOConfig(UARTHandle_t * hUART){
 8000460:	b480      	push	{r7}
 8000462:	b083      	sub	sp, #12
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
	hUART->pGPIO->MODER &= ~(0x3 << (hUART->TX_pin * 2));
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800046c:	681a      	ldr	r2, [r3, #0]
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8000474:	005b      	lsls	r3, r3, #1
 8000476:	2103      	movs	r1, #3
 8000478:	fa01 f303 	lsl.w	r3, r1, r3
 800047c:	43db      	mvns	r3, r3
 800047e:	4619      	mov	r1, r3
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000484:	400a      	ands	r2, r1
 8000486:	601a      	str	r2, [r3, #0]
	hUART->pGPIO->MODER |= (0x2 << (hUART->TX_pin * 2));
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800048c:	681a      	ldr	r2, [r3, #0]
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8000494:	005b      	lsls	r3, r3, #1
 8000496:	2102      	movs	r1, #2
 8000498:	fa01 f303 	lsl.w	r3, r1, r3
 800049c:	4619      	mov	r1, r3
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004a2:	430a      	orrs	r2, r1
 80004a4:	601a      	str	r2, [r3, #0]
	hUART->pGPIO->MODER &= ~(0x3 << (hUART->RX_pin * 2));
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004aa:	681a      	ldr	r2, [r3, #0]
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80004b2:	005b      	lsls	r3, r3, #1
 80004b4:	2103      	movs	r1, #3
 80004b6:	fa01 f303 	lsl.w	r3, r1, r3
 80004ba:	43db      	mvns	r3, r3
 80004bc:	4619      	mov	r1, r3
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004c2:	400a      	ands	r2, r1
 80004c4:	601a      	str	r2, [r3, #0]
	hUART->pGPIO->MODER |= (0x2 << (hUART->RX_pin * 2));
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004ca:	681a      	ldr	r2, [r3, #0]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80004d2:	005b      	lsls	r3, r3, #1
 80004d4:	2102      	movs	r1, #2
 80004d6:	fa01 f303 	lsl.w	r3, r1, r3
 80004da:	4619      	mov	r1, r3
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004e0:	430a      	orrs	r2, r1
 80004e2:	601a      	str	r2, [r3, #0]
	if(hUART->pUART == USART1 || hUART->pUART == USART2 || hUART->pUART == USART3){
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	6a1b      	ldr	r3, [r3, #32]
 80004e8:	4a7c      	ldr	r2, [pc, #496]	; (80006dc <UART_GPIOConfig+0x27c>)
 80004ea:	4293      	cmp	r3, r2
 80004ec:	d009      	beq.n	8000502 <UART_GPIOConfig+0xa2>
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	6a1b      	ldr	r3, [r3, #32]
 80004f2:	4a7b      	ldr	r2, [pc, #492]	; (80006e0 <UART_GPIOConfig+0x280>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d004      	beq.n	8000502 <UART_GPIOConfig+0xa2>
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	6a1b      	ldr	r3, [r3, #32]
 80004fc:	4a79      	ldr	r2, [pc, #484]	; (80006e4 <UART_GPIOConfig+0x284>)
 80004fe:	4293      	cmp	r3, r2
 8000500:	d172      	bne.n	80005e8 <UART_GPIOConfig+0x188>
		hUART->pGPIO->AFR[hUART->TX_pin / 8] &= ~(0xF << (hUART->TX_pin % 8) * 4);
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000506:	687a      	ldr	r2, [r7, #4]
 8000508:	f892 2031 	ldrb.w	r2, [r2, #49]	; 0x31
 800050c:	08d2      	lsrs	r2, r2, #3
 800050e:	b2d0      	uxtb	r0, r2
 8000510:	4602      	mov	r2, r0
 8000512:	3208      	adds	r2, #8
 8000514:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 800051e:	f003 0307 	and.w	r3, r3, #7
 8000522:	009b      	lsls	r3, r3, #2
 8000524:	210f      	movs	r1, #15
 8000526:	fa01 f303 	lsl.w	r3, r1, r3
 800052a:	43db      	mvns	r3, r3
 800052c:	4619      	mov	r1, r3
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000532:	4011      	ands	r1, r2
 8000534:	f100 0208 	add.w	r2, r0, #8
 8000538:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		hUART->pGPIO->AFR[hUART->TX_pin / 8] |= (0x7 << (hUART->TX_pin % 8) * 4);
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000540:	687a      	ldr	r2, [r7, #4]
 8000542:	f892 2031 	ldrb.w	r2, [r2, #49]	; 0x31
 8000546:	08d2      	lsrs	r2, r2, #3
 8000548:	b2d0      	uxtb	r0, r2
 800054a:	4602      	mov	r2, r0
 800054c:	3208      	adds	r2, #8
 800054e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8000558:	f003 0307 	and.w	r3, r3, #7
 800055c:	009b      	lsls	r3, r3, #2
 800055e:	2107      	movs	r1, #7
 8000560:	fa01 f303 	lsl.w	r3, r1, r3
 8000564:	4619      	mov	r1, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800056a:	4311      	orrs	r1, r2
 800056c:	f100 0208 	add.w	r2, r0, #8
 8000570:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		hUART->pGPIO->AFR[hUART->RX_pin / 8] &= ~(0xF << (hUART->RX_pin % 8) * 4);
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000578:	687a      	ldr	r2, [r7, #4]
 800057a:	f892 2030 	ldrb.w	r2, [r2, #48]	; 0x30
 800057e:	08d2      	lsrs	r2, r2, #3
 8000580:	b2d0      	uxtb	r0, r2
 8000582:	4602      	mov	r2, r0
 8000584:	3208      	adds	r2, #8
 8000586:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8000590:	f003 0307 	and.w	r3, r3, #7
 8000594:	009b      	lsls	r3, r3, #2
 8000596:	210f      	movs	r1, #15
 8000598:	fa01 f303 	lsl.w	r3, r1, r3
 800059c:	43db      	mvns	r3, r3
 800059e:	4619      	mov	r1, r3
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80005a4:	4011      	ands	r1, r2
 80005a6:	f100 0208 	add.w	r2, r0, #8
 80005aa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		hUART->pGPIO->AFR[hUART->RX_pin / 8] |= (0x7 << (hUART->RX_pin % 8) * 4);
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80005b2:	687a      	ldr	r2, [r7, #4]
 80005b4:	f892 2030 	ldrb.w	r2, [r2, #48]	; 0x30
 80005b8:	08d2      	lsrs	r2, r2, #3
 80005ba:	b2d0      	uxtb	r0, r2
 80005bc:	4602      	mov	r2, r0
 80005be:	3208      	adds	r2, #8
 80005c0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80005ca:	f003 0307 	and.w	r3, r3, #7
 80005ce:	009b      	lsls	r3, r3, #2
 80005d0:	2107      	movs	r1, #7
 80005d2:	fa01 f303 	lsl.w	r3, r1, r3
 80005d6:	4619      	mov	r1, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80005dc:	4311      	orrs	r1, r2
 80005de:	f100 0208 	add.w	r2, r0, #8
 80005e2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80005e6:	e072      	b.n	80006ce <UART_GPIOConfig+0x26e>

	}
	else{
		hUART->pGPIO->AFR[hUART->TX_pin / 8] &= ~(0xF << (hUART->TX_pin % 8) * 4);
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80005ec:	687a      	ldr	r2, [r7, #4]
 80005ee:	f892 2031 	ldrb.w	r2, [r2, #49]	; 0x31
 80005f2:	08d2      	lsrs	r2, r2, #3
 80005f4:	b2d0      	uxtb	r0, r2
 80005f6:	4602      	mov	r2, r0
 80005f8:	3208      	adds	r2, #8
 80005fa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8000604:	f003 0307 	and.w	r3, r3, #7
 8000608:	009b      	lsls	r3, r3, #2
 800060a:	210f      	movs	r1, #15
 800060c:	fa01 f303 	lsl.w	r3, r1, r3
 8000610:	43db      	mvns	r3, r3
 8000612:	4619      	mov	r1, r3
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000618:	4011      	ands	r1, r2
 800061a:	f100 0208 	add.w	r2, r0, #8
 800061e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		hUART->pGPIO->AFR[hUART->TX_pin / 8] |= (0x8 << (hUART->TX_pin % 8) * 4);
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000626:	687a      	ldr	r2, [r7, #4]
 8000628:	f892 2031 	ldrb.w	r2, [r2, #49]	; 0x31
 800062c:	08d2      	lsrs	r2, r2, #3
 800062e:	b2d0      	uxtb	r0, r2
 8000630:	4602      	mov	r2, r0
 8000632:	3208      	adds	r2, #8
 8000634:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 800063e:	f003 0307 	and.w	r3, r3, #7
 8000642:	009b      	lsls	r3, r3, #2
 8000644:	2108      	movs	r1, #8
 8000646:	fa01 f303 	lsl.w	r3, r1, r3
 800064a:	4619      	mov	r1, r3
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000650:	4311      	orrs	r1, r2
 8000652:	f100 0208 	add.w	r2, r0, #8
 8000656:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		hUART->pGPIO->AFR[hUART->RX_pin / 8] &= ~(0xF << (hUART->RX_pin % 8) * 4);
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800065e:	687a      	ldr	r2, [r7, #4]
 8000660:	f892 2030 	ldrb.w	r2, [r2, #48]	; 0x30
 8000664:	08d2      	lsrs	r2, r2, #3
 8000666:	b2d0      	uxtb	r0, r2
 8000668:	4602      	mov	r2, r0
 800066a:	3208      	adds	r2, #8
 800066c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8000676:	f003 0307 	and.w	r3, r3, #7
 800067a:	009b      	lsls	r3, r3, #2
 800067c:	210f      	movs	r1, #15
 800067e:	fa01 f303 	lsl.w	r3, r1, r3
 8000682:	43db      	mvns	r3, r3
 8000684:	4619      	mov	r1, r3
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800068a:	4011      	ands	r1, r2
 800068c:	f100 0208 	add.w	r2, r0, #8
 8000690:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		hUART->pGPIO->AFR[hUART->RX_pin / 8] |= (0x8 << (hUART->RX_pin % 8) * 4);
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000698:	687a      	ldr	r2, [r7, #4]
 800069a:	f892 2030 	ldrb.w	r2, [r2, #48]	; 0x30
 800069e:	08d2      	lsrs	r2, r2, #3
 80006a0:	b2d0      	uxtb	r0, r2
 80006a2:	4602      	mov	r2, r0
 80006a4:	3208      	adds	r2, #8
 80006a6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80006b0:	f003 0307 	and.w	r3, r3, #7
 80006b4:	009b      	lsls	r3, r3, #2
 80006b6:	2108      	movs	r1, #8
 80006b8:	fa01 f303 	lsl.w	r3, r1, r3
 80006bc:	4619      	mov	r1, r3
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80006c2:	4311      	orrs	r1, r2
 80006c4:	f100 0208 	add.w	r2, r0, #8
 80006c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80006cc:	bf00      	nop
 80006ce:	bf00      	nop
 80006d0:	370c      	adds	r7, #12
 80006d2:	46bd      	mov	sp, r7
 80006d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d8:	4770      	bx	lr
 80006da:	bf00      	nop
 80006dc:	40011000 	.word	0x40011000
 80006e0:	40004400 	.word	0x40004400
 80006e4:	40004800 	.word	0x40004800

080006e8 <UART_Periph_ClockEnable>:

void UART_Periph_ClockEnable(UARTHandle_t * hUART){
 80006e8:	b480      	push	{r7}
 80006ea:	b083      	sub	sp, #12
 80006ec:	af00      	add	r7, sp, #0
 80006ee:	6078      	str	r0, [r7, #4]
	switch(hUART->UART_bus){
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	f893 302e 	ldrb.w	r3, [r3, #46]	; 0x2e
 80006f6:	2b04      	cmp	r3, #4
 80006f8:	d857      	bhi.n	80007aa <UART_Periph_ClockEnable+0xc2>
 80006fa:	a201      	add	r2, pc, #4	; (adr r2, 8000700 <UART_Periph_ClockEnable+0x18>)
 80006fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000700:	08000715 	.word	0x08000715
 8000704:	08000733 	.word	0x08000733
 8000708:	08000751 	.word	0x08000751
 800070c:	0800076f 	.word	0x0800076f
 8000710:	0800078d 	.word	0x0800078d
	case AHB1:
		hUART->pRCC->AHB1ENR |= (0x1 << hUART->Clk_pin);
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000718:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 8000720:	4619      	mov	r1, r3
 8000722:	2301      	movs	r3, #1
 8000724:	408b      	lsls	r3, r1
 8000726:	4619      	mov	r1, r3
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800072c:	430a      	orrs	r2, r1
 800072e:	631a      	str	r2, [r3, #48]	; 0x30
		break;
 8000730:	e03b      	b.n	80007aa <UART_Periph_ClockEnable+0xc2>
	case AHB2:
		hUART->pRCC->AHB2ENR |= (0x1 << hUART->Clk_pin);
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000736:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 800073e:	4619      	mov	r1, r3
 8000740:	2301      	movs	r3, #1
 8000742:	408b      	lsls	r3, r1
 8000744:	4619      	mov	r1, r3
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800074a:	430a      	orrs	r2, r1
 800074c:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 800074e:	e02c      	b.n	80007aa <UART_Periph_ClockEnable+0xc2>
	case AHB3:
		hUART->pRCC->AHB3ENR |= (0x1 << hUART->Clk_pin);
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000754:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 800075c:	4619      	mov	r1, r3
 800075e:	2301      	movs	r3, #1
 8000760:	408b      	lsls	r3, r1
 8000762:	4619      	mov	r1, r3
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000768:	430a      	orrs	r2, r1
 800076a:	639a      	str	r2, [r3, #56]	; 0x38
		break;
 800076c:	e01d      	b.n	80007aa <UART_Periph_ClockEnable+0xc2>
	case APB1:
		hUART->pRCC->APB1ENR |= (0x1 << hUART->Clk_pin);
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000772:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 800077a:	4619      	mov	r1, r3
 800077c:	2301      	movs	r3, #1
 800077e:	408b      	lsls	r3, r1
 8000780:	4619      	mov	r1, r3
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000786:	430a      	orrs	r2, r1
 8000788:	641a      	str	r2, [r3, #64]	; 0x40
		break;
 800078a:	e00e      	b.n	80007aa <UART_Periph_ClockEnable+0xc2>
	case APB2:
		hUART->pRCC->APB2ENR |= (0x1 << hUART->Clk_pin);
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000790:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 8000798:	4619      	mov	r1, r3
 800079a:	2301      	movs	r3, #1
 800079c:	408b      	lsls	r3, r1
 800079e:	4619      	mov	r1, r3
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80007a4:	430a      	orrs	r2, r1
 80007a6:	645a      	str	r2, [r3, #68]	; 0x44
		break;
 80007a8:	bf00      	nop
	}
}
 80007aa:	bf00      	nop
 80007ac:	370c      	adds	r7, #12
 80007ae:	46bd      	mov	sp, r7
 80007b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b4:	4770      	bx	lr
 80007b6:	bf00      	nop

080007b8 <UART_Init>:

void UART_Init(UARTHandle_t * hUART){
 80007b8:	b590      	push	{r4, r7, lr}
 80007ba:	b083      	sub	sp, #12
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
	/** Reset the UART peripheral */
	UART_DeInit(hUART);
 80007c0:	6878      	ldr	r0, [r7, #4]
 80007c2:	f000 f8b7 	bl	8000934 <UART_DeInit>
	/** Configure clock of GPIO */
	UART_GPIO_ClockEnable(hUART);
 80007c6:	6878      	ldr	r0, [r7, #4]
 80007c8:	f7ff fde2 	bl	8000390 <UART_GPIO_ClockEnable>
	/** Configure GPIO pins */
	UART_GPIOConfig(hUART);
 80007cc:	6878      	ldr	r0, [r7, #4]
 80007ce:	f7ff fe47 	bl	8000460 <UART_GPIOConfig>
	/** Configure clock for UART */
	UART_Periph_ClockEnable(hUART);
 80007d2:	6878      	ldr	r0, [r7, #4]
 80007d4:	f7ff ff88 	bl	80006e8 <UART_Periph_ClockEnable>
	/** Configure oversampling */
	hUART->pUART->CR1 |= (hUART->oversampling << 15);
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	6a1b      	ldr	r3, [r3, #32]
 80007dc:	68da      	ldr	r2, [r3, #12]
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	781b      	ldrb	r3, [r3, #0]
 80007e2:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80007e6:	b2db      	uxtb	r3, r3
 80007e8:	03db      	lsls	r3, r3, #15
 80007ea:	4619      	mov	r1, r3
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	6a1b      	ldr	r3, [r3, #32]
 80007f0:	430a      	orrs	r2, r1
 80007f2:	60da      	str	r2, [r3, #12]
	/** Configure data frame format */
	hUART->pUART->CR1 |= (hUART->word_length << 12);
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	6a1b      	ldr	r3, [r3, #32]
 80007f8:	68da      	ldr	r2, [r3, #12]
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	781b      	ldrb	r3, [r3, #0]
 80007fe:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8000802:	b2db      	uxtb	r3, r3
 8000804:	031b      	lsls	r3, r3, #12
 8000806:	4619      	mov	r1, r3
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	6a1b      	ldr	r3, [r3, #32]
 800080c:	430a      	orrs	r2, r1
 800080e:	60da      	str	r2, [r3, #12]
	/** Configure parity enable */
	hUART->pUART->CR1 |= (hUART->parity_enable << 10);
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	6a1b      	ldr	r3, [r3, #32]
 8000814:	68da      	ldr	r2, [r3, #12]
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	781b      	ldrb	r3, [r3, #0]
 800081a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800081e:	b2db      	uxtb	r3, r3
 8000820:	029b      	lsls	r3, r3, #10
 8000822:	4619      	mov	r1, r3
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	6a1b      	ldr	r3, [r3, #32]
 8000828:	430a      	orrs	r2, r1
 800082a:	60da      	str	r2, [r3, #12]
	/** Configure parity setting */
	hUART->pUART->CR1 |= (hUART->parity_setting << 9);
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	6a1b      	ldr	r3, [r3, #32]
 8000830:	68da      	ldr	r2, [r3, #12]
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	781b      	ldrb	r3, [r3, #0]
 8000836:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800083a:	b2db      	uxtb	r3, r3
 800083c:	025b      	lsls	r3, r3, #9
 800083e:	4619      	mov	r1, r3
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	6a1b      	ldr	r3, [r3, #32]
 8000844:	430a      	orrs	r2, r1
 8000846:	60da      	str	r2, [r3, #12]
	/** Configure interrupt enable */
	if (hUART->interrupt_enable){
 8000848:	687b      	ldr	r3, [r7, #4]
 800084a:	781b      	ldrb	r3, [r3, #0]
 800084c:	f003 0320 	and.w	r3, r3, #32
 8000850:	b2db      	uxtb	r3, r3
 8000852:	2b00      	cmp	r3, #0
 8000854:	d030      	beq.n	80008b8 <UART_Init+0x100>
		NVIC->ISER[hUART->interrupt_number/32] |= (0x1 << (hUART->interrupt_number % 32));
 8000856:	4a36      	ldr	r2, [pc, #216]	; (8000930 <UART_Init+0x178>)
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	785b      	ldrb	r3, [r3, #1]
 800085c:	095b      	lsrs	r3, r3, #5
 800085e:	b2d8      	uxtb	r0, r3
 8000860:	4603      	mov	r3, r0
 8000862:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000866:	687a      	ldr	r2, [r7, #4]
 8000868:	7852      	ldrb	r2, [r2, #1]
 800086a:	f002 021f 	and.w	r2, r2, #31
 800086e:	2101      	movs	r1, #1
 8000870:	fa01 f202 	lsl.w	r2, r1, r2
 8000874:	4614      	mov	r4, r2
 8000876:	4a2e      	ldr	r2, [pc, #184]	; (8000930 <UART_Init+0x178>)
 8000878:	4601      	mov	r1, r0
 800087a:	4323      	orrs	r3, r4
 800087c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
		/** Configure transmit interrupt enable */
		hUART->pUART->CR1 |= (hUART->transmit_interrupt << 7);
 8000880:	687b      	ldr	r3, [r7, #4]
 8000882:	6a1b      	ldr	r3, [r3, #32]
 8000884:	68da      	ldr	r2, [r3, #12]
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	789b      	ldrb	r3, [r3, #2]
 800088a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800088e:	b2db      	uxtb	r3, r3
 8000890:	01db      	lsls	r3, r3, #7
 8000892:	4619      	mov	r1, r3
 8000894:	687b      	ldr	r3, [r7, #4]
 8000896:	6a1b      	ldr	r3, [r3, #32]
 8000898:	430a      	orrs	r2, r1
 800089a:	60da      	str	r2, [r3, #12]
		/** Configure receive interrupt enable */
		hUART->pUART->CR1 |= (hUART->receiver_interrupt << 5);
 800089c:	687b      	ldr	r3, [r7, #4]
 800089e:	6a1b      	ldr	r3, [r3, #32]
 80008a0:	68da      	ldr	r2, [r3, #12]
 80008a2:	687b      	ldr	r3, [r7, #4]
 80008a4:	789b      	ldrb	r3, [r3, #2]
 80008a6:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80008aa:	b2db      	uxtb	r3, r3
 80008ac:	015b      	lsls	r3, r3, #5
 80008ae:	4619      	mov	r1, r3
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	6a1b      	ldr	r3, [r3, #32]
 80008b4:	430a      	orrs	r2, r1
 80008b6:	60da      	str	r2, [r3, #12]
	}
	/** Configure baud rate */
	hUART->pUART->BRR = ((SystemClock+(hUART->baud_rate/2U))/hUART->baud_rate);
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	685b      	ldr	r3, [r3, #4]
 80008bc:	085b      	lsrs	r3, r3, #1
 80008be:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 80008c2:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 80008c6:	687a      	ldr	r2, [r7, #4]
 80008c8:	6851      	ldr	r1, [r2, #4]
 80008ca:	687a      	ldr	r2, [r7, #4]
 80008cc:	6a12      	ldr	r2, [r2, #32]
 80008ce:	fbb3 f3f1 	udiv	r3, r3, r1
 80008d2:	6093      	str	r3, [r2, #8]
//	hUART->pUART->BRR = UART_BaudRate(hUART);
	/** Configure transmit enable */
	hUART->pUART->CR1 |= (hUART->to_transmit << 3);
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	6a1b      	ldr	r3, [r3, #32]
 80008d8:	68da      	ldr	r2, [r3, #12]
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	789b      	ldrb	r3, [r3, #2]
 80008de:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80008e2:	b2db      	uxtb	r3, r3
 80008e4:	00db      	lsls	r3, r3, #3
 80008e6:	4619      	mov	r1, r3
 80008e8:	687b      	ldr	r3, [r7, #4]
 80008ea:	6a1b      	ldr	r3, [r3, #32]
 80008ec:	430a      	orrs	r2, r1
 80008ee:	60da      	str	r2, [r3, #12]
	/** Configure receive enable */
	hUART->pUART->CR1 |= (hUART->to_receive << 2);
 80008f0:	687b      	ldr	r3, [r7, #4]
 80008f2:	6a1b      	ldr	r3, [r3, #32]
 80008f4:	68da      	ldr	r2, [r3, #12]
 80008f6:	687b      	ldr	r3, [r7, #4]
 80008f8:	789b      	ldrb	r3, [r3, #2]
 80008fa:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80008fe:	b2db      	uxtb	r3, r3
 8000900:	009b      	lsls	r3, r3, #2
 8000902:	4619      	mov	r1, r3
 8000904:	687b      	ldr	r3, [r7, #4]
 8000906:	6a1b      	ldr	r3, [r3, #32]
 8000908:	430a      	orrs	r2, r1
 800090a:	60da      	str	r2, [r3, #12]
	/** Enable/Disable peripheral */
	hUART->pUART->CR1 |= (hUART->enable << 13);
 800090c:	687b      	ldr	r3, [r7, #4]
 800090e:	6a1b      	ldr	r3, [r3, #32]
 8000910:	68da      	ldr	r2, [r3, #12]
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	781b      	ldrb	r3, [r3, #0]
 8000916:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800091a:	b2db      	uxtb	r3, r3
 800091c:	035b      	lsls	r3, r3, #13
 800091e:	4619      	mov	r1, r3
 8000920:	687b      	ldr	r3, [r7, #4]
 8000922:	6a1b      	ldr	r3, [r3, #32]
 8000924:	430a      	orrs	r2, r1
 8000926:	60da      	str	r2, [r3, #12]
}
 8000928:	bf00      	nop
 800092a:	370c      	adds	r7, #12
 800092c:	46bd      	mov	sp, r7
 800092e:	bd90      	pop	{r4, r7, pc}
 8000930:	e000e100 	.word	0xe000e100

08000934 <UART_DeInit>:

void UART_DeInit(UARTHandle_t * hUART){
 8000934:	b480      	push	{r7}
 8000936:	b083      	sub	sp, #12
 8000938:	af00      	add	r7, sp, #0
 800093a:	6078      	str	r0, [r7, #4]
	/** Reset control registers */
	hUART->pUART->CR1 = 0;
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	6a1b      	ldr	r3, [r3, #32]
 8000940:	2200      	movs	r2, #0
 8000942:	60da      	str	r2, [r3, #12]
	hUART->pUART->CR2 = 0;
 8000944:	687b      	ldr	r3, [r7, #4]
 8000946:	6a1b      	ldr	r3, [r3, #32]
 8000948:	2200      	movs	r2, #0
 800094a:	611a      	str	r2, [r3, #16]
	hUART->pUART->CR3 = 0;
 800094c:	687b      	ldr	r3, [r7, #4]
 800094e:	6a1b      	ldr	r3, [r3, #32]
 8000950:	2200      	movs	r2, #0
 8000952:	615a      	str	r2, [r3, #20]
	/** Reset baud rate register */
	hUART->pUART->BRR = 0;
 8000954:	687b      	ldr	r3, [r7, #4]
 8000956:	6a1b      	ldr	r3, [r3, #32]
 8000958:	2200      	movs	r2, #0
 800095a:	609a      	str	r2, [r3, #8]
	/** Clear data register */
	hUART->pUART->DR = 0;
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	6a1b      	ldr	r3, [r3, #32]
 8000960:	2200      	movs	r2, #0
 8000962:	605a      	str	r2, [r3, #4]
}
 8000964:	bf00      	nop
 8000966:	370c      	adds	r7, #12
 8000968:	46bd      	mov	sp, r7
 800096a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800096e:	4770      	bx	lr

08000970 <UART_RxCmpltCallBack>:
	SCB->CPACR &= ~(0xF << 20);
	/** Return the value to write to the USARTx_BRR */
	return baud_rate_regval;
}

void UART_RxCmpltCallBack(UARTHandle_t * hUART){
 8000970:	b480      	push	{r7}
 8000972:	b083      	sub	sp, #12
 8000974:	af00      	add	r7, sp, #0
 8000976:	6078      	str	r0, [r7, #4]
	hUART->pRxBuffer[hUART->RxIndex] = hUART->pUART->DR;
 8000978:	687b      	ldr	r3, [r7, #4]
 800097a:	6a1b      	ldr	r3, [r3, #32]
 800097c:	6859      	ldr	r1, [r3, #4]
 800097e:	687b      	ldr	r3, [r7, #4]
 8000980:	68da      	ldr	r2, [r3, #12]
 8000982:	687b      	ldr	r3, [r7, #4]
 8000984:	69db      	ldr	r3, [r3, #28]
 8000986:	4413      	add	r3, r2
 8000988:	b2ca      	uxtb	r2, r1
 800098a:	701a      	strb	r2, [r3, #0]
	while(!((hUART->pUART->SR >> 7) & 0x1));
 800098c:	bf00      	nop
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	6a1b      	ldr	r3, [r3, #32]
 8000992:	681b      	ldr	r3, [r3, #0]
 8000994:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000998:	2b00      	cmp	r3, #0
 800099a:	d0f8      	beq.n	800098e <UART_RxCmpltCallBack+0x1e>
	hUART->pUART->DR = (uint8_t)(hUART->pRxBuffer[hUART->RxIndex]);
 800099c:	687b      	ldr	r3, [r7, #4]
 800099e:	68da      	ldr	r2, [r3, #12]
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	69db      	ldr	r3, [r3, #28]
 80009a4:	4413      	add	r3, r2
 80009a6:	781a      	ldrb	r2, [r3, #0]
 80009a8:	687b      	ldr	r3, [r7, #4]
 80009aa:	6a1b      	ldr	r3, [r3, #32]
 80009ac:	605a      	str	r2, [r3, #4]
	while(!((hUART->pUART->SR >> 7) & 0x1));
 80009ae:	bf00      	nop
 80009b0:	687b      	ldr	r3, [r7, #4]
 80009b2:	6a1b      	ldr	r3, [r3, #32]
 80009b4:	681b      	ldr	r3, [r3, #0]
 80009b6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80009ba:	2b00      	cmp	r3, #0
 80009bc:	d0f8      	beq.n	80009b0 <UART_RxCmpltCallBack+0x40>
	hUART->pUART->DR = '\r';
 80009be:	687b      	ldr	r3, [r7, #4]
 80009c0:	6a1b      	ldr	r3, [r3, #32]
 80009c2:	220d      	movs	r2, #13
 80009c4:	605a      	str	r2, [r3, #4]
	while(!((hUART->pUART->SR >> 7) & 0x1));
 80009c6:	bf00      	nop
 80009c8:	687b      	ldr	r3, [r7, #4]
 80009ca:	6a1b      	ldr	r3, [r3, #32]
 80009cc:	681b      	ldr	r3, [r3, #0]
 80009ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80009d2:	2b00      	cmp	r3, #0
 80009d4:	d0f8      	beq.n	80009c8 <UART_RxCmpltCallBack+0x58>
	hUART->pUART->DR = '\n';
 80009d6:	687b      	ldr	r3, [r7, #4]
 80009d8:	6a1b      	ldr	r3, [r3, #32]
 80009da:	220a      	movs	r2, #10
 80009dc:	605a      	str	r2, [r3, #4]
	if (hUART == &hUART1){
 80009de:	687b      	ldr	r3, [r7, #4]
 80009e0:	4a1a      	ldr	r2, [pc, #104]	; (8000a4c <UART_RxCmpltCallBack+0xdc>)
 80009e2:	4293      	cmp	r3, r2
 80009e4:	d111      	bne.n	8000a0a <UART_RxCmpltCallBack+0x9a>
		while(!((hUART2.pUART->SR >> 7) & 0x1));
 80009e6:	bf00      	nop
 80009e8:	4b19      	ldr	r3, [pc, #100]	; (8000a50 <UART_RxCmpltCallBack+0xe0>)
 80009ea:	6a1b      	ldr	r3, [r3, #32]
 80009ec:	681b      	ldr	r3, [r3, #0]
 80009ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80009f2:	2b00      	cmp	r3, #0
 80009f4:	d0f8      	beq.n	80009e8 <UART_RxCmpltCallBack+0x78>
		hUART2.pUART->DR = (uint8_t)(hUART->pRxBuffer[hUART->RxIndex]);
 80009f6:	687b      	ldr	r3, [r7, #4]
 80009f8:	68da      	ldr	r2, [r3, #12]
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	69db      	ldr	r3, [r3, #28]
 80009fe:	4413      	add	r3, r2
 8000a00:	781a      	ldrb	r2, [r3, #0]
 8000a02:	4b13      	ldr	r3, [pc, #76]	; (8000a50 <UART_RxCmpltCallBack+0xe0>)
 8000a04:	6a1b      	ldr	r3, [r3, #32]
 8000a06:	605a      	str	r2, [r3, #4]
 8000a08:	e010      	b.n	8000a2c <UART_RxCmpltCallBack+0xbc>
	}
	else{
		while(!((hUART1.pUART->SR >> 7) & 0x1));
 8000a0a:	bf00      	nop
 8000a0c:	4b0f      	ldr	r3, [pc, #60]	; (8000a4c <UART_RxCmpltCallBack+0xdc>)
 8000a0e:	6a1b      	ldr	r3, [r3, #32]
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000a16:	2b00      	cmp	r3, #0
 8000a18:	d0f8      	beq.n	8000a0c <UART_RxCmpltCallBack+0x9c>
		hUART1.pUART->DR = (uint8_t)(hUART->pRxBuffer[hUART->RxIndex]);
 8000a1a:	687b      	ldr	r3, [r7, #4]
 8000a1c:	68da      	ldr	r2, [r3, #12]
 8000a1e:	687b      	ldr	r3, [r7, #4]
 8000a20:	69db      	ldr	r3, [r3, #28]
 8000a22:	4413      	add	r3, r2
 8000a24:	781a      	ldrb	r2, [r3, #0]
 8000a26:	4b09      	ldr	r3, [pc, #36]	; (8000a4c <UART_RxCmpltCallBack+0xdc>)
 8000a28:	6a1b      	ldr	r3, [r3, #32]
 8000a2a:	605a      	str	r2, [r3, #4]
	}
	while(!((hUART->pUART->SR >> 6) & 0x1));
 8000a2c:	bf00      	nop
 8000a2e:	687b      	ldr	r3, [r7, #4]
 8000a30:	6a1b      	ldr	r3, [r3, #32]
 8000a32:	681b      	ldr	r3, [r3, #0]
 8000a34:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000a38:	2b00      	cmp	r3, #0
 8000a3a:	d0f8      	beq.n	8000a2e <UART_RxCmpltCallBack+0xbe>
}
 8000a3c:	bf00      	nop
 8000a3e:	bf00      	nop
 8000a40:	370c      	adds	r7, #12
 8000a42:	46bd      	mov	sp, r7
 8000a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a48:	4770      	bx	lr
 8000a4a:	bf00      	nop
 8000a4c:	2000001c 	.word	0x2000001c
 8000a50:	20000050 	.word	0x20000050

08000a54 <UART_RxHandler>:

void UART_RxHandler(void (*CallBack)(UARTHandle_t *), UARTHandle_t * hUART){
 8000a54:	b580      	push	{r7, lr}
 8000a56:	b082      	sub	sp, #8
 8000a58:	af00      	add	r7, sp, #0
 8000a5a:	6078      	str	r0, [r7, #4]
 8000a5c:	6039      	str	r1, [r7, #0]
	CallBack(hUART);
 8000a5e:	687b      	ldr	r3, [r7, #4]
 8000a60:	6838      	ldr	r0, [r7, #0]
 8000a62:	4798      	blx	r3
	NVIC->ICPR[hUART->interrupt_number/32] |= (0x1 << (hUART->interrupt_number % 32));
 8000a64:	4a0c      	ldr	r2, [pc, #48]	; (8000a98 <UART_RxHandler+0x44>)
 8000a66:	683b      	ldr	r3, [r7, #0]
 8000a68:	785b      	ldrb	r3, [r3, #1]
 8000a6a:	095b      	lsrs	r3, r3, #5
 8000a6c:	b2d8      	uxtb	r0, r3
 8000a6e:	4603      	mov	r3, r0
 8000a70:	3360      	adds	r3, #96	; 0x60
 8000a72:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000a76:	683a      	ldr	r2, [r7, #0]
 8000a78:	7852      	ldrb	r2, [r2, #1]
 8000a7a:	f002 021f 	and.w	r2, r2, #31
 8000a7e:	2101      	movs	r1, #1
 8000a80:	fa01 f202 	lsl.w	r2, r1, r2
 8000a84:	4904      	ldr	r1, [pc, #16]	; (8000a98 <UART_RxHandler+0x44>)
 8000a86:	431a      	orrs	r2, r3
 8000a88:	f100 0360 	add.w	r3, r0, #96	; 0x60
 8000a8c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000a90:	bf00      	nop
 8000a92:	3708      	adds	r7, #8
 8000a94:	46bd      	mov	sp, r7
 8000a96:	bd80      	pop	{r7, pc}
 8000a98:	e000e100 	.word	0xe000e100

08000a9c <USART1_IRQHandler>:

void USART1_IRQHandler(void){
 8000a9c:	b580      	push	{r7, lr}
 8000a9e:	af00      	add	r7, sp, #0
	UART_RxHandler(UART_RxCmpltCallBack, &hUART1);
 8000aa0:	4902      	ldr	r1, [pc, #8]	; (8000aac <USART1_IRQHandler+0x10>)
 8000aa2:	4803      	ldr	r0, [pc, #12]	; (8000ab0 <USART1_IRQHandler+0x14>)
 8000aa4:	f7ff ffd6 	bl	8000a54 <UART_RxHandler>
}
 8000aa8:	bf00      	nop
 8000aaa:	bd80      	pop	{r7, pc}
 8000aac:	2000001c 	.word	0x2000001c
 8000ab0:	08000971 	.word	0x08000971

08000ab4 <USART2_IRQHandler>:

void USART2_IRQHandler(void){
 8000ab4:	b580      	push	{r7, lr}
 8000ab6:	af00      	add	r7, sp, #0
	UART_RxHandler(UART_RxCmpltCallBack, &hUART2);
 8000ab8:	4902      	ldr	r1, [pc, #8]	; (8000ac4 <USART2_IRQHandler+0x10>)
 8000aba:	4803      	ldr	r0, [pc, #12]	; (8000ac8 <USART2_IRQHandler+0x14>)
 8000abc:	f7ff ffca 	bl	8000a54 <UART_RxHandler>
}
 8000ac0:	bf00      	nop
 8000ac2:	bd80      	pop	{r7, pc}
 8000ac4:	20000050 	.word	0x20000050
 8000ac8:	08000971 	.word	0x08000971

08000acc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000acc:	480d      	ldr	r0, [pc, #52]	; (8000b04 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000ace:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000ad0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000ad4:	480c      	ldr	r0, [pc, #48]	; (8000b08 <LoopForever+0x6>)
  ldr r1, =_edata
 8000ad6:	490d      	ldr	r1, [pc, #52]	; (8000b0c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000ad8:	4a0d      	ldr	r2, [pc, #52]	; (8000b10 <LoopForever+0xe>)
  movs r3, #0
 8000ada:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000adc:	e002      	b.n	8000ae4 <LoopCopyDataInit>

08000ade <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000ade:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000ae0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000ae2:	3304      	adds	r3, #4

08000ae4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000ae4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000ae6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000ae8:	d3f9      	bcc.n	8000ade <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000aea:	4a0a      	ldr	r2, [pc, #40]	; (8000b14 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000aec:	4c0a      	ldr	r4, [pc, #40]	; (8000b18 <LoopForever+0x16>)
  movs r3, #0
 8000aee:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000af0:	e001      	b.n	8000af6 <LoopFillZerobss>

08000af2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000af2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000af4:	3204      	adds	r2, #4

08000af6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000af6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000af8:	d3fb      	bcc.n	8000af2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000afa:	f000 f811 	bl	8000b20 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000afe:	f7ff fb75 	bl	80001ec <main>

08000b02 <LoopForever>:

LoopForever:
  b LoopForever
 8000b02:	e7fe      	b.n	8000b02 <LoopForever>
  ldr   r0, =_estack
 8000b04:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000b08:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000b0c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000b10:	08000b88 	.word	0x08000b88
  ldr r2, =_sbss
 8000b14:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000b18:	200000b4 	.word	0x200000b4

08000b1c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000b1c:	e7fe      	b.n	8000b1c <ADC_IRQHandler>
	...

08000b20 <__libc_init_array>:
 8000b20:	b570      	push	{r4, r5, r6, lr}
 8000b22:	4d0d      	ldr	r5, [pc, #52]	; (8000b58 <__libc_init_array+0x38>)
 8000b24:	4c0d      	ldr	r4, [pc, #52]	; (8000b5c <__libc_init_array+0x3c>)
 8000b26:	1b64      	subs	r4, r4, r5
 8000b28:	10a4      	asrs	r4, r4, #2
 8000b2a:	2600      	movs	r6, #0
 8000b2c:	42a6      	cmp	r6, r4
 8000b2e:	d109      	bne.n	8000b44 <__libc_init_array+0x24>
 8000b30:	4d0b      	ldr	r5, [pc, #44]	; (8000b60 <__libc_init_array+0x40>)
 8000b32:	4c0c      	ldr	r4, [pc, #48]	; (8000b64 <__libc_init_array+0x44>)
 8000b34:	f000 f818 	bl	8000b68 <_init>
 8000b38:	1b64      	subs	r4, r4, r5
 8000b3a:	10a4      	asrs	r4, r4, #2
 8000b3c:	2600      	movs	r6, #0
 8000b3e:	42a6      	cmp	r6, r4
 8000b40:	d105      	bne.n	8000b4e <__libc_init_array+0x2e>
 8000b42:	bd70      	pop	{r4, r5, r6, pc}
 8000b44:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b48:	4798      	blx	r3
 8000b4a:	3601      	adds	r6, #1
 8000b4c:	e7ee      	b.n	8000b2c <__libc_init_array+0xc>
 8000b4e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b52:	4798      	blx	r3
 8000b54:	3601      	adds	r6, #1
 8000b56:	e7f2      	b.n	8000b3e <__libc_init_array+0x1e>
 8000b58:	08000b80 	.word	0x08000b80
 8000b5c:	08000b80 	.word	0x08000b80
 8000b60:	08000b80 	.word	0x08000b80
 8000b64:	08000b84 	.word	0x08000b84

08000b68 <_init>:
 8000b68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b6a:	bf00      	nop
 8000b6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b6e:	bc08      	pop	{r3}
 8000b70:	469e      	mov	lr, r3
 8000b72:	4770      	bx	lr

08000b74 <_fini>:
 8000b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b76:	bf00      	nop
 8000b78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b7a:	bc08      	pop	{r3}
 8000b7c:	469e      	mov	lr, r3
 8000b7e:	4770      	bx	lr
