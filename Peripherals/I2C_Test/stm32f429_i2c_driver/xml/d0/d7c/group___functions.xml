<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d0/d7c/group___functions" kind="group">
    <compoundname>Functions</compoundname>
    <title>Functions</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="d0/d7c/group___functions_1ga687dcd53b52670e1579afeaeb80015d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_Init</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle, uint8_t pin)</argsstring>
        <name>GPIO_Init</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Initialize the I2C peripheral module based on the SCLK frequency, Device address (if it is a slave), Acknowledgement enable, and Fast Mode Duty Cycle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>* Pointer to instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Determine which port is passed to this function</para>
<para>&lt; Enable clock to the determined port</para>
<para>&lt; Set mode of GPIO pin</para>
<para>&lt; Set pin to pull-up</para>
<para>&lt; Set pin to alternate function mode if mode is set to be</para>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="72" column="6" bodyfile="Src/stm32f429xx_gpio_driver.c" bodystart="32" bodyend="41" declfile="Inc/stm32f429xx_gpio_driver.h" declline="72" declcolumn="6"/>
        <references refid="d0/d7c/group___functions_1ga207beb599c53ec175b3c0423cad3bd52" compoundref="d0/dde/stm32f429xx__gpio__driver_8c" startline="28" endline="31">GPIO_ConfigureAlternateFunction</references>
        <references refid="d0/d7c/group___functions_1ga639d0fb5e8242d4d162acabcf4a633af" compoundref="d0/dde/stm32f429xx__gpio__driver_8c" startline="12" endline="15">GPIO_ConfigureMode</references>
        <references refid="d0/d7c/group___functions_1gada28e76990b270e3642d27c27ab8312a" compoundref="d0/dde/stm32f429xx__gpio__driver_8c" startline="24" endline="27">GPIO_ConfigurePullUpDown</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1ga33cefa400df9fdae0bbfd207a3d53551" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="55">GPIO_Handle_t::GPIO_PinConfig</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gaf582963784931a387bdb2a31c93f07e5" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="46">GPIO_PinConfig_t::Mode</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gab2c22aa8e429496a1822328b7078984c" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="54">GPIO_Handle_t::pGPIOx</references>
        <references refid="d0/dde/stm32f429xx__gpio__driver_8c_1a77dddc59313d440f52b4f7b9dcf71a52">RCC_AHBClockEnable</references>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1gac87bcc66bbf621515a2627f50e74a520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_DeInit</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle)</argsstring>
        <name>GPIO_DeInit</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <briefdescription>
<para>De-initialize the I2C peripheral module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>* Pointer to instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="78" column="6" declfile="Inc/stm32f429xx_gpio_driver.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga639d0fb5e8242d4d162acabcf4a633af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_ConfigureMode</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle, uint8_t pin)</argsstring>
        <name>GPIO_ConfigureMode</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Transmit the data byte to the slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the master I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pSlaveAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data byte to be sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="86" column="6" bodyfile="Src/stm32f429xx_gpio_driver.c" bodystart="12" bodyend="15" declfile="Inc/stm32f429xx_gpio_driver.h" declline="86" declcolumn="6"/>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1ga33cefa400df9fdae0bbfd207a3d53551" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="55">GPIO_Handle_t::GPIO_PinConfig</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gaf582963784931a387bdb2a31c93f07e5" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="46">GPIO_PinConfig_t::Mode</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gab2c22aa8e429496a1822328b7078984c" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="54">GPIO_Handle_t::pGPIOx</references>
        <referencedby refid="d0/d7c/group___functions_1ga687dcd53b52670e1579afeaeb80015d3" compoundref="d0/dde/stm32f429xx__gpio__driver_8c" startline="32" endline="41">GPIO_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga3435576d6ead6bf69dbd35979bd36e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_ConfigureOutputType</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle, uint8_t pin)</argsstring>
        <name>GPIO_ConfigureOutputType</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="87" column="6" bodyfile="Src/stm32f429xx_gpio_driver.c" bodystart="16" bodyend="19" declfile="Inc/stm32f429xx_gpio_driver.h" declline="87" declcolumn="6"/>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1ga33cefa400df9fdae0bbfd207a3d53551" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="55">GPIO_Handle_t::GPIO_PinConfig</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gaa8937a8eabf2358fc8a38c8f67fa98cc" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="47">GPIO_PinConfig_t::OType</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gab2c22aa8e429496a1822328b7078984c" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="54">GPIO_Handle_t::pGPIOx</references>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga0c68b7f212c4dbe9b0684d2af1f49028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_ConfigureOutputSpeed</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle, uint8_t pin)</argsstring>
        <name>GPIO_ConfigureOutputSpeed</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="88" column="6" bodyfile="Src/stm32f429xx_gpio_driver.c" bodystart="20" bodyend="23" declfile="Inc/stm32f429xx_gpio_driver.h" declline="88" declcolumn="6"/>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1ga33cefa400df9fdae0bbfd207a3d53551" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="55">GPIO_Handle_t::GPIO_PinConfig</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1ga3aa707ffa633fad03774a3df9b18e411" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="49">GPIO_PinConfig_t::OutputSpeed</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gab2c22aa8e429496a1822328b7078984c" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="54">GPIO_Handle_t::pGPIOx</references>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1gada28e76990b270e3642d27c27ab8312a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_ConfigurePullUpDown</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle, uint8_t pin)</argsstring>
        <name>GPIO_ConfigurePullUpDown</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="89" column="6" bodyfile="Src/stm32f429xx_gpio_driver.c" bodystart="24" bodyend="27" declfile="Inc/stm32f429xx_gpio_driver.h" declline="89" declcolumn="6"/>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1ga33cefa400df9fdae0bbfd207a3d53551" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="55">GPIO_Handle_t::GPIO_PinConfig</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gab2c22aa8e429496a1822328b7078984c" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="54">GPIO_Handle_t::pGPIOx</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gaa856c1501c06fc5c78a28071e78b53cf" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="48">GPIO_PinConfig_t::PullUpDown</references>
        <referencedby refid="d0/d7c/group___functions_1ga687dcd53b52670e1579afeaeb80015d3" compoundref="d0/dde/stm32f429xx__gpio__driver_8c" startline="32" endline="41">GPIO_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga207beb599c53ec175b3c0423cad3bd52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_ConfigureAlternateFunction</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle, uint8_t pin)</argsstring>
        <name>GPIO_ConfigureAlternateFunction</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="90" column="6" bodyfile="Src/stm32f429xx_gpio_driver.c" bodystart="28" bodyend="31" declfile="Inc/stm32f429xx_gpio_driver.h" declline="90" declcolumn="6"/>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gace2ebe1b2201b762cab0bf7f821786e2" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="50">GPIO_PinConfig_t::AlternateFunction</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1ga33cefa400df9fdae0bbfd207a3d53551" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="55">GPIO_Handle_t::GPIO_PinConfig</references>
        <references refid="d6/d6c/group___g_p_i_o___driver___header_1gab2c22aa8e429496a1822328b7078984c" compoundref="d9/daa/stm32f429xx__gpio__driver_8h" startline="54">GPIO_Handle_t::pGPIOx</references>
        <referencedby refid="d0/d7c/group___functions_1ga687dcd53b52670e1579afeaeb80015d3" compoundref="d0/dde/stm32f429xx__gpio__driver_8c" startline="32" endline="41">GPIO_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1gafb2e58fcca2d543702cbcde224626f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_Set_Bit</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle, uint8_t pin)</argsstring>
        <name>GPIO_Set_Bit</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="91" column="6" declfile="Inc/stm32f429xx_gpio_driver.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1gaa84d5517549fcf949313264c0abaa103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GPIO_Clear_Bit</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle, uint8_t pin)</argsstring>
        <name>GPIO_Clear_Bit</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Receive the data byte from the slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the master I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pSlaveAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pReceive</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data byte where the data to receive </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="99" column="6" declfile="Inc/stm32f429xx_gpio_driver.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga69fa9b3a9975667c753241da1d6b95a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GPIO_Get_BitValue</definition>
        <argsstring>(GPIO_Handle_t *pGPIOHandle)</argsstring>
        <name>GPIO_Get_BitValue</name>
        <param>
          <type><ref refid="d1/dcb/struct_g_p_i_o___handle__t" kindref="compound">GPIO_Handle_t</ref> *</type>
          <declname>pGPIOHandle</declname>
        </param>
        <briefdescription>
<para>Transmit the data byte to the master. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data byte to be sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_gpio_driver.h" line="106" column="9" declfile="Inc/stm32f429xx_gpio_driver.h" declline="106" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga9b83058c3356c704a9c0f3cdfeff8260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2C_Init</definition>
        <argsstring>(I2C_Handle_t *)</argsstring>
        <name>I2C_Init</name>
        <param>
          <type><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> *</type>
        </param>
        <briefdescription>
<para>Initialize the I2C peripheral module based on the SCLK frequency, Device address (if it is a slave), Acknowledgement enable, and Fast Mode Duty Cycle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>* Pointer to instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_i2c_driver.h" line="57" column="6" declfile="Inc/stm32f429xx_i2c_driver.h" declline="57" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1gad34e477f4c0f4353b2b94e2e81da4731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2C_DeInit</definition>
        <argsstring>(I2C_Handle_t *)</argsstring>
        <name>I2C_DeInit</name>
        <param>
          <type><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> *</type>
        </param>
        <briefdescription>
<para>De-initialize the I2C peripheral module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>* Pointer to instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_i2c_driver.h" line="63" column="6" declfile="Inc/stm32f429xx_i2c_driver.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga5b14253ed9daf7d17a80cfc5624ed24f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2C_MasterSendData</definition>
        <argsstring>(I2C_Handle_t *pI2CHandle, const uint8_t *pSlaveAddress, uint8_t *pData)</argsstring>
        <name>I2C_MasterSendData</name>
        <param>
          <type><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> *</type>
          <declname>pI2CHandle</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>pSlaveAddress</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pData</declname>
        </param>
        <briefdescription>
<para>Transmit the data byte to the slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the master I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pSlaveAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data byte to be sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_i2c_driver.h" line="71" column="6" declfile="Inc/stm32f429xx_i2c_driver.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga2c652fec1139e8a2f22706fcf4e8a97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2C_MasterReceiveData</definition>
        <argsstring>(I2C_Handle_t *pI2CHandle, const uint8_t *pSlaveAddress, uint8_t *pReceive)</argsstring>
        <name>I2C_MasterReceiveData</name>
        <param>
          <type><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> *</type>
          <declname>pI2CHandle</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>pSlaveAddress</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pReceive</declname>
        </param>
        <briefdescription>
<para>Receive the data byte from the slave. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the master I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pSlaveAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pReceive</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data byte where the data to receive </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_i2c_driver.h" line="79" column="6" declfile="Inc/stm32f429xx_i2c_driver.h" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1gaf199c15c6b266f41d6b0305cef8db719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2C_SlaveSendData</definition>
        <argsstring>(I2C_Handle_t *pI2CHandle, uint8_t *pData)</argsstring>
        <name>I2C_SlaveSendData</name>
        <param>
          <type><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> *</type>
          <declname>pI2CHandle</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pData</declname>
        </param>
        <briefdescription>
<para>Transmit the data byte to the master. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data byte to be sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_i2c_driver.h" line="86" column="6" declfile="Inc/stm32f429xx_i2c_driver.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga78afc3540aff2e93710b4b9c576888c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2C_SlaveReceiveData</definition>
        <argsstring>(I2C_Handle_t *pI2CHandle, uint8_t *pReceive)</argsstring>
        <name>I2C_SlaveReceiveData</name>
        <param>
          <type><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> *</type>
          <declname>pI2CHandle</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pReceive</declname>
        </param>
        <briefdescription>
<para>Receive the data byte from the master. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pReceive</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data byte where the data to receive </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_i2c_driver.h" line="93" column="6" declfile="Inc/stm32f429xx_i2c_driver.h" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga7e033efba44b5def1d7cf19e86829559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2C_Error_Interrupt_Handler</definition>
        <argsstring>(I2C_Handle_t *pI2CHandle)</argsstring>
        <name>I2C_Error_Interrupt_Handler</name>
        <param>
          <type><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> *</type>
          <declname>pI2CHandle</declname>
        </param>
        <briefdescription>
<para>Callback function for I2C Error Interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave/master I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_i2c_driver.h" line="99" column="6" declfile="Inc/stm32f429xx_i2c_driver.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga656d1fe643316c70add3464dc899af02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2C_Event_Interrupt_Handler</definition>
        <argsstring>(I2C_Handle_t *pI2CHandle)</argsstring>
        <name>I2C_Event_Interrupt_Handler</name>
        <param>
          <type><ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> *</type>
          <declname>pI2CHandle</declname>
        </param>
        <briefdescription>
<para>Callback function for I2C Event Interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pI2CHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the slave/master I2C instance of class <ref refid="da/dfe/struct_i2_c___handle__t" kindref="compound">I2C_Handle_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_i2c_driver.h" line="105" column="6" declfile="Inc/stm32f429xx_i2c_driver.h" declline="105" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1gaeaaf36368c2b29f5923ff8b408fc1edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_EnableClock</definition>
        <argsstring>(RCC_Handle_t *pRCC, uint8_t pos)</argsstring>
        <name>RCC_EnableClock</name>
        <param>
          <type><ref refid="d9/da1/struct_r_c_c___handle__t" kindref="compound">RCC_Handle_t</ref> *</type>
          <declname>pRCC</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Obtain the address of the AHB1ENR</para>
<para>&lt; Configure the ENR of the required bus using the address of AHB1ENR and offset</para>
        </inbodydescription>
        <location file="Inc/stm32f429xx_rcc_driver.h" line="70" column="6" bodyfile="Src/stm32f429xx_rcc_driver.c" bodystart="8" bodyend="11" declfile="Inc/stm32f429xx_rcc_driver.h" declline="70" declcolumn="6"/>
        <references refid="dd/d66/struct_r_c_c___config__t_1a6cd01da7cc4806829ae5db75f89544ec" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="54">RCC_Config_t::bus</references>
        <references refid="d9/da1/struct_r_c_c___handle__t_1a2b10fa826b1f834f4a5a7a06d9d700a2" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="58">RCC_Handle_t::pRCC</references>
        <references refid="d9/da1/struct_r_c_c___handle__t_1a11e495c439bbdfc416fbd3cb207cf813" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="59">RCC_Handle_t::RCC_Config</references>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga3259f930e29db98219fb8ff55dd8a039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_ResetClock</definition>
        <argsstring>(RCC_Handle_t *pRCC, uint8_t pos)</argsstring>
        <name>RCC_ResetClock</name>
        <param>
          <type><ref refid="d9/da1/struct_r_c_c___handle__t" kindref="compound">RCC_Handle_t</ref> *</type>
          <declname>pRCC</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Obtain the address of the AHB1RST</para>
<para>&lt; Configure the RST of the required bus using the address of AHB1ENR and offset</para>
        </inbodydescription>
        <location file="Inc/stm32f429xx_rcc_driver.h" line="71" column="6" bodyfile="Src/stm32f429xx_rcc_driver.c" bodystart="12" bodyend="16" declfile="Inc/stm32f429xx_rcc_driver.h" declline="71" declcolumn="6"/>
        <references refid="dd/d66/struct_r_c_c___config__t_1a6cd01da7cc4806829ae5db75f89544ec" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="54">RCC_Config_t::bus</references>
        <references refid="d9/da1/struct_r_c_c___handle__t_1a2b10fa826b1f834f4a5a7a06d9d700a2" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="58">RCC_Handle_t::pRCC</references>
        <references refid="d9/da1/struct_r_c_c___handle__t_1a11e495c439bbdfc416fbd3cb207cf813" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="59">RCC_Handle_t::RCC_Config</references>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1gac2be2c79ec733dd8b1f373a3ca22547b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RCC_SetPrescaler</definition>
        <argsstring>(RCC_Handle_t *pRCC, uint8_t scaler)</argsstring>
        <name>RCC_SetPrescaler</name>
        <param>
          <type><ref refid="d9/da1/struct_r_c_c___handle__t" kindref="compound">RCC_Handle_t</ref> *</type>
          <declname>pRCC</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>scaler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Obtain whether clock bus is AHB category</para>
        </inbodydescription>
        <location file="Inc/stm32f429xx_rcc_driver.h" line="72" column="6" bodyfile="Src/stm32f429xx_rcc_driver.c" bodystart="17" bodyend="32" declfile="Inc/stm32f429xx_rcc_driver.h" declline="72" declcolumn="6"/>
        <references refid="d5/d22/group___classes_1ggae6f7dfb64f0fd48995ee0c71e0c9a8a4a75a5e90abcb1e35306aca2a77ff01833" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="41">AHB1</references>
        <references refid="d5/d22/group___classes_1ggae6f7dfb64f0fd48995ee0c71e0c9a8a4a2516474d80019e460dae478bb4521009" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="42">AHB2</references>
        <references refid="d5/d22/group___classes_1ggae6f7dfb64f0fd48995ee0c71e0c9a8a4a4fa163ec908ece5908470b05f19a791c" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="43">AHB3</references>
        <references refid="d5/d22/group___classes_1ggae6f7dfb64f0fd48995ee0c71e0c9a8a4a0a7928dc21633f8cf78bf136bda6fe45" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="44">APB1</references>
        <references refid="dd/d66/struct_r_c_c___config__t_1a6cd01da7cc4806829ae5db75f89544ec" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="54">RCC_Config_t::bus</references>
        <references refid="d9/da1/struct_r_c_c___handle__t_1a2b10fa826b1f834f4a5a7a06d9d700a2" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="58">RCC_Handle_t::pRCC</references>
        <references refid="d9/da1/struct_r_c_c___handle__t_1a11e495c439bbdfc416fbd3cb207cf813" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="59">RCC_Handle_t::RCC_Config</references>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga23b00e327ddae3ac4af10494df251633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d22/group___classes_1ga02e55ce66a310468cd5996a5769a1e77" kindref="member">ClockSrc_t</ref></type>
        <definition>ClockSrc_t RCC_GetSystemClock</definition>
        <argsstring>()</argsstring>
        <name>RCC_GetSystemClock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Inc/stm32f429xx_rcc_driver.h" line="73" column="12" declfile="Inc/stm32f429xx_rcc_driver.h" declline="73" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="d0/d7c/group___functions_1ga58a28f6f623fbcd7255d4d05b6a855c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t RCC_GetPrescaler</definition>
        <argsstring>(RCC_Handle_t *pRCC)</argsstring>
        <name>RCC_GetPrescaler</name>
        <param>
          <type><ref refid="d9/da1/struct_r_c_c___handle__t" kindref="compound">RCC_Handle_t</ref> *</type>
          <declname>pRCC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Obtain whether clock bus is AHB category</para>
        </inbodydescription>
        <location file="Inc/stm32f429xx_rcc_driver.h" line="74" column="9" bodyfile="Src/stm32f429xx_rcc_driver.c" bodystart="36" bodyend="48" declfile="Inc/stm32f429xx_rcc_driver.h" declline="74" declcolumn="9"/>
        <references refid="d5/d22/group___classes_1ggae6f7dfb64f0fd48995ee0c71e0c9a8a4a75a5e90abcb1e35306aca2a77ff01833" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="41">AHB1</references>
        <references refid="d5/d22/group___classes_1ggae6f7dfb64f0fd48995ee0c71e0c9a8a4a2516474d80019e460dae478bb4521009" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="42">AHB2</references>
        <references refid="d5/d22/group___classes_1ggae6f7dfb64f0fd48995ee0c71e0c9a8a4a4fa163ec908ece5908470b05f19a791c" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="43">AHB3</references>
        <references refid="d5/d22/group___classes_1ggae6f7dfb64f0fd48995ee0c71e0c9a8a4a0a7928dc21633f8cf78bf136bda6fe45" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="44">APB1</references>
        <references refid="dd/d66/struct_r_c_c___config__t_1a6cd01da7cc4806829ae5db75f89544ec" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="54">RCC_Config_t::bus</references>
        <references refid="d9/da1/struct_r_c_c___handle__t_1a2b10fa826b1f834f4a5a7a06d9d700a2" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="58">RCC_Handle_t::pRCC</references>
        <references refid="d9/da1/struct_r_c_c___handle__t_1a11e495c439bbdfc416fbd3cb207cf813" compoundref="da/d2b/stm32f429xx__rcc__driver_8h" startline="59">RCC_Handle_t::RCC_Config</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
